.! Automatically generated by Pod::Dsr version 0.01
.! Tue Feb 27 23:56:12 2001
.!
.! Standard preamble:
.! ======================================================================
.LAYOUT 0
.! We need .CONTROL CHARACTERS in order to accept 255 (also 0-31,127-159).
.CONTROL CHARACTERS
.! The % character can often appear in documentation.
.DISABLE OVERSTRIKING
.! Turn on ^*bold\* recognition
.FLAGS BOLD
.! and ^&underlining\& (for italics)
.FLAGS UNDERLINE
.! ======================================================================
.!
.INDEX POD2RNO
.TITLE POD2RNO
.SUBTITLE "perl v5.7.0" "27-FEB-2001" "User Contributed Perl Documentation"
.HEADER LEVEL 1 "NAME"
pod2rno - Convert POD data to formatted DSR input
.HEADER LEVEL 1 "SYNOPSIS"
.INDEX SYNOPSIS
pod2rno [^*--layout\*=^&string\&] [^*--chapter\*=^&number\&]
[^*--section\*=^&manext\&] [^*--release\*=^&version\&]
[^*--center\*=^&string\&] [^*--date\*=^&string\&] 
[^*--official\*] [^*--lax\*]
[^*--quotes\*=^&quotes\&] [^&input\& [^&output\&] ...]
.PARAGRAPH
pod2rno ^*--help\*
.HEADER LEVEL 1 "DESCRIPTION"
.INDEX DESCRIPTION
^*pod2rno\* is a front-end for Pod::Dsr, using it to generate DSR .RNO input
from POD source.  The resulting DSR code is suitable for use with the 
RUNOFF command.
.PARAGRAPH
^&input\& is the file to read for POD source (the POD can be embedded in
code).  If ^&input\& isn't given, it defaults to STDIN.  ^&output\&, if given,
is the file to which to write the formatted output.  If ^&output\& isn't
given, the formatted output is written to STDOUT.  Several POD files can be
processed in the same ^*pod2rno\* invocation (saving module load and compile
times) by providing multiple pairs of ^&input\& and ^&output\& files on the
command line.
.PARAGRAPH
^*--section\*, ^*--release\*, ^*--center\*, ^*--date\*, ^*--layout\*, and 
^*--official\* can be used to set the headers and footers to use; if not 
given, Pod::Dsr will assume various defaults.  See below or the Pod::Dsr document 
for details.
.PARAGRAPH
Besides the obvious pod conversions, Pod::Dsr, and therefore pod2rno also
takes care of formatting ^&func()\&, ^&func\&(n), and simple variable references
like $foo or @bar so you don't have to use code escapes for them; complex
expressions like $fred{'stuff'} will still need to be escaped, though.
It takes care of several other runoff-specific tweaks.  See the Pod::Dsr document 
for complete information.
.HEADER LEVEL 1 "OPTIONS"
.INDEX OPTIONS
.LIST
.LIST ELEMENT; "^*-l\* ^&string\&, ^*--layout\*=^&string\&"
.INDEX Item>^*-l ^&string, ^*--layout=^&string
Inserts the given ^&string\& at the head of the dsr document, typically used
to set the .LAYOUT style.  The default is .LAYOUT 0, but could be
given as .LAYOUT ^&n1[,n2]\&, where ^&n1\& can be any of qw(0 1 2 3),
if ^&n1\& _> 0 then ^&n2\& can specify the number of lines below
the last line of text on a page where the page number will appear.
^&E.g.\& \-l ".LAYOUT 1,2" or \-\-layout=".LAYOUT 2,2".
.LIST ELEMENT; "^*-c\* ^&chapter_number\&, ^*--chapter\*=^&chapeter_number\&"
.INDEX Item>^*-c ^&chapter_number, ^*--chapter=^&chapeter_number
Inserts a .CHAPTER ^&chapter number\& command into the document after 
the .TITLE.
.LIST ELEMENT; "^*--center\*=^&string\&"
.INDEX Item>^*--center=^&string
Sets the centered page header to ^&string\&.  The default is "User
Contributed Perl Documentation", but also see ^*--official\* below.
.LIST ELEMENT; "^*-d\* ^&string\&, ^*--date\*=^&string\&"
.INDEX Item>^*-d ^&string, ^*--date=^&string
Set the left-hand footer string to this value.  By default, the modification
date of the input file will be used, or the current date if input comes from
STDIN.
.LIST ELEMENT; "^*-h\*, ^*--help\*"
.INDEX Item>^*-h, ^*--help
Print out usage information.
.LIST ELEMENT; "^*--lax\*"
.INDEX Item>^*--lax
Don't complain when required sections are missing.  Not currently used, as
POD checking functionality is not yet implemented in Pod::Dsr 
(See the podchecker document).
.LIST ELEMENT; "^*-o\*, ^*--official\*"
.INDEX Item>^*-o, ^*--official
Set the default header to indicate that this page is part of the standard
Perl release, if ^*--center\* is not also given.
.LIST ELEMENT; "^*-q\* ^&quotes\&, ^*--quotes\*=^&quotes\&"
.INDEX Item>^*-q ^&quotes, ^*--quotes=^&quotes
Sets the quote marks used to surround _< text to ^&quotes\&.  If
^&quotes\& is a single character, it is used as both the left and right
quote; if ^&quotes\& is two characters, the first character is used as the
left quote and the second as the right quoted; and if ^&quotes\& is four
characters, the first two are used as the left quote and the second two as
the right quote.  ^&quotes\& may also be set to the special value none, in 
which case no quote marks are added around _< text.
.LIST ELEMENT; "^*-r\*, ^*--release\*"
.INDEX Item>^*-r, ^*--release
Set the centered footer.  By default, this is the version of Perl you run
^*pod2rno\* under.
.LIST ELEMENT; "^*-s\*, ^*--section\*"
.INDEX Item>^*-s, ^*--section
Set the section for the .HEADER_LEVEL command.  The standard section 
numbering convention is to use 1 for user commands, 2 for system calls, 3 for
functions, 4 for devices, 5 for file formats, 6 for games, 7 for
miscellaneous information, and 8 for administrator commands.  There is a lot
of variation here, however; some systems (like Solaris) use 4 for file
formats, 5 for miscellaneous information, and 7 for devices.  Still others
use 1m instead of 8, or some mix of both.  About the only section numbers
that are reliably consistent are 1, 2, and 3.  By default, section 1 will 
be used unless the file ends in .pm in which case section 3 will be selected.
.END LIST
.HEADER LEVEL 1 "DIAGNOSTICS"
.INDEX DIAGNOSTICS
If ^*pod2rno\* fails with errors, see the Pod::Dsr document and the Pod::Parser document for
information about what those errors might mean.
.HEADER LEVEL 1 "EXAMPLES"
.INDEX EXAMPLES
.LITERAL
    pod2rno program > program.rno
    runoff program
.END LITERAL
.LITERAL
    pod2rno SomeModule.pm > PERL_ROOT:[LIB.POD]SomeModule.rno
    runoff PERL_ROOT:[LIB.POD]SomeModule.rno
.END LITERAL
You may then TYPE or PRINT out the resulting .MEM file.
.PARAGRAPH
If you would like to print out a lot of pod pages continuously, you probably
want to use the pod2mem utility instead of pod2rno (pod2mem has yet to be
written though :-).
.PARAGRAPH
Index entries are inserted for every =head\d directive as well as for 
each list element.  To obtain a PRINT able or TYPE able index file
run ^*runoff\* with the /INTERMEDIATE qualifier then the /INDEX 
qualifier, as in:
.PARAGRAPH
.LITERAL
    runoff /intermediate program.rno
    runoff /index program.brn
    runoff program.rnx
.END LITERAL
after which you may TYPE or PRINT both the program.mem file as well as the 
program.mex file which holds the formatted index.
.PARAGRAPH
A table of contents may also be generated with the /CONTENTS qualifier 
to RUNOFF like so:
.PARAGRAPH
.LITERAL
    runoff /intermediate program.rno
    runoff /contents program.brn
    runoff program.rnt
.END LITERAL
after which you may TYPE or PRINT both the program.mem file as well as the 
program.mec file which holds the formatted table of contents.
.HEADER LEVEL 1 "BUGS"
.INDEX BUGS
Lots of this documentation is duplicated from the Pod::Dsr document.
.PARAGRAPH
POD checking and the corresponding ^*--lax\* option don't work yet.
.HEADER LEVEL 1 "SEE ALSO"
.INDEX SEE ALSO
Pod::Dsr, Pod::Man, Pod::Parser, 
HELP RUNOFF.  HELP DSR.
.PARAGRAPH
For additional information that may be more accurate for your specific
system, see either HELP RUNOFF or HELP DSR.  See also the README.runoff
file that comes with the Pod2VMSHlp distribution.
.PARAGRAPH
The pod markup for Pod::Man and pod2man have information on typical
sections to include in manual page documents.
.HEADER LEVEL 1 "AUTHOR"
.INDEX AUTHOR
Peter Prymmer pvhp@best.com, based on ^*pod2man\* by Russ Allbery 
which was in turn based on the original ^*pod2man\* by Larry Wall 
and Tom Christiansen.  Large portions of this documentation, 
particularly the sections on the anatomy of a proper man
page, are taken from the ^*pod2man\* documentation by Tom.
